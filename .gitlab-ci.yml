stages:
  - üêç lint
  - ü§û test
  - üì¶ build
  - üöÄ deploy

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  CLI_NAME: "qgis-deployment-toolbelt"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PROJECT_DIR: "qgis_deployment_toolbelt/"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  key:
    files:
      - requirements/*.txt
  paths:
    - .cache/pip

# -- LINT JOBS -------------------------------------------------------------------------
linter:
  stage: üêç lint
  image: python:3.8-slim-buster
  only:
    changes:
      - "**/*.py"
  before_script:
    - python -m pip install -U flake8
  script:
    - flake8 $PROJECT_DIR --count --select=E9,F63,F7,F82 --show-source --statistics
    - flake8 $PROJECT_DIR --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

# -- TEST JOBS -------------------------------------------------------------------------
basic-test:
  image: python:3.8-slim-buster
  stage: ü§û test
  only:
    changes:
      - "**/*.py"
      - ".gitlab-ci.yml"
  before_script:
    - python -m pip install -U -r requirements/base.txt
    - python -m pip install -U -r requirements/development.txt
  script:
    - python -m pip install -e .
    - $CLI_NAME --version
    - $CLI_NAME --help

# -- BUILD JOBS ------------------------------------------------------------------------
build-wheel:
  image: python:3.8-slim-buster
  stage: üì¶ build
  only:
    - main
    - tags

  before_script:
    - python -m pip install -U -r requirements/base.txt
    - python -m pip install -U -r requirements/packaging.txt
  script:
    - python setup.py egg_info
    - python setup.py sdist
    - python setup.py bdist_wheel

  artifacts:
    paths:
      - dist/*.whl

  except:
    changes:
      - "**/*.md"
      - "**/*.rst"

build-win-exe:
  stage: üì¶ build
  image: python:windowsservercore-1809
  tags:
    - win10-vs2017
  only:
    - main
    - tags

  before_script:
    - python -m pip install -U -r requirements/base.txt
    - python -m pip install -U -r requirements/packaging.txt
  script:
    - python .\builder\version_info_templater.py

  artifacts:
    paths:
      - dist/*.exe

  except:
    changes:
      - "**/*.md"
      - "**/*.rst"

build-bin-debian:
  stage: üì¶ build
  image: python:3.8-slim-buster
  only:
    - main
    - tags

  before_script:
    - python -m pip install -U -r requirements/base.txt
    - python -m pip install -U -r requirements/packaging.txt
  script:
    - python -OO builder/pyinstaller_build_ubuntu.py

  artifacts:
    paths:
      - dist/*

  except:
    changes:
      - "**/*.md"
      - "**/*.rst"

# -- DEPLOYMENT JOBS -------------------------------------------------------------------
gitlab-pypi-package:
  stage: üöÄ deploy
  image: python:latest
  dependencies:
    - packaging
  only:
    - tags
  script:
    - python -m pip install -U twine
    - python setup.py sdist bdist_wheel
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/*

pages:
  image: python:3.8-slim-buster
  stage: üöÄ deploy
  only:
    - main
  before_script:
    - python -m pip install -U -r requirements/base.txt
    - python -m pip install -U -r requirements/development.txt
    - python -m pip install -U -r requirements/documentation.txt
  script:
    - sphinx-build -b html docs public
  artifacts:
    paths:
      - public
