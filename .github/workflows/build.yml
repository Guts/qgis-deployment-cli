name: "ðŸ“¦ Build"

# Triggers
on:
  push:
    branches: [main]

    paths:
      - ".github/workflows/build.yml"
      - "builder/**/*"
      - "qgis_deployment_toolbelt/**/*.py"

    tags: "*"

# Globals
env:
  PROJECT_FOLDER: "qgis_deployment_toolbelt"
  PYTHON_VERSION: 3.8
  PYINSTALLER_LOG_LEVEL: "DEBUG"

# Jobs definition
jobs:
  build-windows:
    name: "ðŸ“¦ Windows"

    runs-on: windows-latest

    steps:
      - name: Get source code
        uses: actions/checkout@v2

      - name: Install project requirements
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install -U -r requirements/development.txt
          python -m pip install -U -r requirements/packaging.txt

      - name: Install project as a package
        run: python -m pip install -e .

      - name: Generates MS Version Info
        run: python .\builder\version_info_templater.py

      - name: Generates MS Executable
        run: python -O .\builder\pyinstaller_build_windows.py

      - name: Save it as artifact
        uses: actions/upload-artifact@v2
        with:
          name: qgis_deployment_toolbelt_windows_executable
          path: dist/qgis_deployment_toolbelt*

  release:
    name: "Release on tag ðŸš€"

    runs-on: ubuntu-latest

    needs: [build-windows]

    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: qgis_deployment_toolbelt_windows_executable
          path: builds/windows/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: "Version ${{ github.ref }}"
          draft: false
          prerelease: false

      - name: Add Windows executable as release Asset
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/windows/
          asset_name: qgis_deployment_toolbelt_windows_executable.zip
          asset_content_type: application/zip
